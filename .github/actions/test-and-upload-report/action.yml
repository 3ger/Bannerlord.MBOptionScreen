name: 'Test Module and Upload Test Results'
description: ''
runs:
  using: "composite"
  steps:
    - name: Download opencover.4.7.922
      uses: i3h/download-release-asset@v1
      with:
        owner: OpenCover
        repo: opencover
        tag: 4.7.922
        file: opencover.4.7.922.zip
    - name: Extract opencover.4.7.922
      uses: DuckSoft/extract-7z-action@v1.0
      with:
        pathSource: opencover.4.7.922.zip
        pathTarget: opencover

    - name: Test
      run: >-
          $stable_version=$env:STABLE_VERSION;
          $stable_version=$stable_version.substring(1);
          $beta_version=$env:BETA_VERSION;
          $beta_version=$beta_version.substring(1);
          dotnet test "src/Mod Configuration Menu.sln" --configuration Stable_Debug -p:GameVersion=$stable_version -p:GameFolder="$PWD/bannerlord-stable";
          dotnet test "src/Mod Configuration Menu.sln" --configuration Stable_Release -p:GameVersion=$stable_version -p:GameFolder="$PWD/bannerlord-stable";
          dotnet test "src/Mod Configuration Menu.sln" --configuration Beta_Debug -p:GameVersion=$beta_version -p:GameFolder="$PWD/bannerlord-beta";
          dotnet test "src/Mod Configuration Menu.sln" --configuration Beta_Release -p:GameVersion=$beta_version -p:GameFolder="$PWD/bannerlord-beta";
      env:
        DOTNET_NOLOGO: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        STABLE_VERSION: ${{secrets.SYNCED_GAME_STABLE_VERSION}}
        BETA_VERSION: ${{secrets.SYNCED_GAME_BETA_VERSION}}
      shell: pwsh

    - name: Test Coverage
      run: >-
          opencover/OpenCover.Console.exe -register -target:"dotnet.exe" -targetargs:"test src/MCM.Tests/MCM.Tests.csproj --configuration Stable_Debug --no-build" -filter:"+[MCMv*.*]* -[MCM*.*Tests]*" -output:coverage_mcm_stable_debug.xml -mergebyhash;
          opencover/OpenCover.Console.exe -register -target:"dotnet.exe" -targetargs:"test src/MCM.Tests/MCM.Tests.csproj --configuration Stable_Release --no-build" -filter:"+[MCMv*.*]* -[MCM*.*Tests]*" -output:coverage_mcm_stable_release.xml -mergebyhash;
          opencover/OpenCover.Console.exe -register -target:"dotnet.exe" -targetargs:"test src/MCM.Tests/MCM.Tests.csproj --configuration Beta_Debug --no-build" -filter:"+[MCMv*.*]* -[MCM*.*Tests]*" -output:coverage_mcm_beta_debug.xml -mergebyhash;
          opencover/OpenCover.Console.exe -register -target:"dotnet.exe" -targetargs:"test src/MCM.Tests/MCM.Tests.csproj --configuration Beta_Release --no-build" -filter:"+[MCMv*.*]* -[MCM*.*Tests]*" -output:coverage_mcm_beta_release.xml -mergebyhash;
      env:
        DOTNET_NOLOGO: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
      shell: pwsh

    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@4.6.1
      with:
        reports: 'coverage_mcm_stable_debug.xml;coverage_mcm_stable_release.xml;coverage_mcm_beta_debug.xml;coverage_mcm_beta_release.xml'
        targetdir: 'coveragereport'
        reporttypes: 'HtmlInline;Cobertura'
        sourcedirs: './'
        tag: '${{ github.run_number }}_${{ github.run_id }}'

    - name: Upload ReportGenerator to GitHub
      uses: actions/upload-artifact@v1
      with:
        name: coverage-report
        path: coveragereport

    - name: Upload ReportGenerator to CodeCov
      uses: codecov/codecov-action@v1
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: coveragereport/Cobertura.xml
        fail_ci_if_error: true